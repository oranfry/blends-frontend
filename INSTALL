Using "myblends" as the name of the instance - you can use whatever you like

Clone the blends repository

# cd /var/www
# git clone git@github.com:oranfry/blends.git myblends.example.com

Get the built-in plugins

# mkdir myblends.example.com/plugins
# cd myblends.example.com/plugins
# git clone git@github.com:oranfry/blends-builtin-plugins.git builtin

Set up your web server to point to the "public" subfolder
DocumentRoot /var/www/myblends.example.com/public

Pull down some dependencies

# cd /var/www/myblends.example.com
# npm install

Build the site

# build/build.php

Create a database (replace the password with one of your choosing)

# mysql -u root
> create database myblends;
> grant all on myblends.* to 'myblends'@'%' identified by 'MySQLPassw0rd!';

Create some tables (modify for your needs)

> use myblends;
> CREATE TABLE `record_transaction` (
>   `id` int(11) NOT NULL AUTO_INCREMENT,
>   `date` date DEFAULT NULL,
>   `account` varchar(40) DEFAULT NULL,
>   `amount` decimal(10,2) DEFAULT NULL,
>   `description` varchar(255) DEFAULT NULL,
>   `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
>   PRIMARY KEY (`id`)
> ) ENGINE=InnoDB;
> exit;

Create a config file

# cp config.php.example config.php
# vim config.php

(Set the mysql password as above, choose a web password, take a look at the blends, plugins and periods being loaded)

Create your own plugins directory, for definitions and custom code

# mkdir plugins/myblends

Define your tables so they can be understood by blends
N.b. `id` and `created` are implicitly picked up.

# mkdir -p plugins/myblends/src/php/class/table
# vim plugins/myblends/src/php/class/table/transaction.php

<?php
namespace table;

class Transaction extends \Table
{
    public $name = "transaction";
    public $table = "record_transaction";
    public function __construct()
    {
        $this->additional_fields = [
            (object) [
                'name' => "date",
                'type' => "text",
            ],
            (object) [
                'name' => "account",
                'type' => "text",
                'suggest' => true,
            ],
            (object) [
                'name' => "description",
                'type' => "text",
            ],
            (object) [
                'name' => "amount",
                'type' => "number",
                'dp' => 2,
            ],
        ];
    }
}

Define some linetypes
In this example, we just import a built-in linetype under a different name

# mkdir -p /var/www/myblends.example.com/plugins/myblends/src/php/class/linetype
# vim /var/www/myblends.example.com/plugins/myblends/src/php/class/linetype/transaction.php

<?php
namespace linetype;

class transaction extends \linetype\plaintransaction
{
}

Create a logo
(Use a square image please)

# cp public/img/logo.png.example public/img/logo.png

Visit the site!

http://myblends.example.com/